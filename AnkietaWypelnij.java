/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package callcenter;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
//import callcenter.DBConnection;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
//import net.proteanit.sql.DbUtils;
/**
 *
 * @author Ola
 */
public class AnkietaWypelnij extends javax.swing.JFrame {

    Connection conn = new DBConnection().connect();
    ResultSet rs = null;
    PreparedStatement pst = null;
    String sql="";
    private Integer nrRespondenta;
    private Integer nrPracownika;
    Ankieta ankieta=new Ankieta();
    DefaultListModel lista= new DefaultListModel();
    
    /**
     * Creates new form Ankieta
     * @param nrRespondenta
     */
    public AnkietaWypelnij(Integer nrRespondenta) {
        initComponents();
        this.nrRespondenta=nrRespondenta;
        fillPollComboBox();
        //WypelnijAnkietaComboBox();

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Pytania = new javax.swing.JTable();
        jButton_Zamknij = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField_NrAnkiety = new javax.swing.JTextField();
        jTextField_NrRespondenta = new javax.swing.JTextField();
        jComboBox_Ankieta = new javax.swing.JComboBox();
        jButton_Zatwierdz = new javax.swing.JButton();
        jLabel_WybierzAnkiete = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList_Odpowiedzi = new javax.swing.JList();
        jComboBox_Pytania = new javax.swing.JComboBox();
        jTextField_Odp = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton_ZatwierdzOdp = new javax.swing.JButton();
        jLabel_Blad = new javax.swing.JLabel();
        jButton_WyswietlOdp = new javax.swing.JButton();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel4.setText("jLabel4");

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable_Pytania.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Nr Pytania", "Treść", "1", "2", "3", "4"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable_Pytania);

        jButton_Zamknij.setText("Zamknij");
        jButton_Zamknij.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_ZamknijMouseClicked(evt);
            }
        });

        jLabel8.setText("Nr respondenta:");

        jLabel9.setText("Nr ankiety:");

        jTextField_NrAnkiety.setEditable(false);

        jTextField_NrRespondenta.setEditable(false);

        jComboBox_Ankieta.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton_Zatwierdz.setText("Wyświetl");
        jButton_Zatwierdz.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_ZatwierdzMouseClicked(evt);
            }
        });

        jLabel_WybierzAnkiete.setForeground(new java.awt.Color(204, 0, 0));

        jLabel1.setText("Nr pytania:");

        jScrollPane2.setViewportView(jList_Odpowiedzi);

        jTextField_Odp.setText("Odpowiedź");

        jLabel3.setText("Odpowiedź:");

        jButton_ZatwierdzOdp.setText("Zatwierdź");
        jButton_ZatwierdzOdp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_ZatwierdzOdpMouseClicked(evt);
            }
        });

        jButton_WyswietlOdp.setText("Wyswietl wszystkie odpowiedzi");
        jButton_WyswietlOdp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_WyswietlOdpMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel_WybierzAnkiete, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_Zatwierdz))
                    .addComponent(jComboBox_Ankieta, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBox_Pytania, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextField_Odp, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton_ZatwierdzOdp))
                                    .addComponent(jLabel3)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField_NrRespondenta, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton_WyswietlOdp, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton_Zamknij)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextField_NrAnkiety, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel_Blad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox_Ankieta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Zatwierdz)
                    .addComponent(jLabel_WybierzAnkiete))
                .addGap(5, 5, 5)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton_Zamknij)
                        .addGap(19, 19, 19))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jTextField_NrRespondenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(jTextField_NrAnkiety, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox_Pytania, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_Odp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_ZatwierdzOdp)
                            .addComponent(jLabel_Blad, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_WyswietlOdp)
                        .addGap(15, 15, 15))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_ZatwierdzMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_ZatwierdzMouseClicked
        // TODO add your handling code here:
        jTextField_NrRespondenta.setText(Integer.toString(nrRespondenta));
        //System.out.println(nrRespondenta);
        jLabel_Blad.setText("");
        jComboBox_Pytania.removeAllItems();
        lista.removeAllElements();
        fillQuestionTable(pollChoice());
    }//GEN-LAST:event_jButton_ZatwierdzMouseClicked
    /**
     * Zatwierdzenie wyboru pytania z jComboBox_Pytania oraz odpowiedzi wpisanej do jTextField_odp
     */
    private void jButton_ZatwierdzOdpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_ZatwierdzOdpMouseClicked
        // TODO add your handling code here:
        jList_Odpowiedzi.removeAll();
        addAnswers();
        
    }//GEN-LAST:event_jButton_ZatwierdzOdpMouseClicked

    private void jButton_WyswietlOdpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_WyswietlOdpMouseClicked
        // TODO add your handling code here:
        lista.removeAllElements();
        fillList();
    }//GEN-LAST:event_jButton_WyswietlOdpMouseClicked

    private void jButton_ZamknijMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_ZamknijMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        dispose();

    }//GEN-LAST:event_jButton_ZamknijMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AnkietaWypelnij.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AnkietaWypelnij.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AnkietaWypelnij.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AnkietaWypelnij.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AnkietaWypelnij(3).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton_WyswietlOdp;
    private javax.swing.JButton jButton_Zamknij;
    private javax.swing.JButton jButton_Zatwierdz;
    private javax.swing.JButton jButton_ZatwierdzOdp;
    private javax.swing.JComboBox jComboBox_Ankieta;
    private javax.swing.JComboBox jComboBox_Pytania;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_Blad;
    private javax.swing.JLabel jLabel_WybierzAnkiete;
    private javax.swing.JList jList_Odpowiedzi;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable_Pytania;
    private javax.swing.JTextField jTextField_NrAnkiety;
    private javax.swing.JTextField jTextField_NrRespondenta;
    private javax.swing.JTextField jTextField_Odp;
    // End of variables declaration//GEN-END:variables
    /**
     * Funkcja wypelniajaca jComboBox_Ankieta
     */
    public void fillPollComboBox(){
        nrPracownika=2;
        sql = "SELECT concat(NrAnkiety,'. ',Opis) FROM ankiety where NrPracownika="+nrPracownika;
        try {
            //wyczyszczenie ComboBox
            jComboBox_Ankieta.removeAllItems();
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            jComboBox_Ankieta.addItem("Wybierz ankiete: ");
            //załadowanie wynikow zapytania z bazy danych do ComboBox
            while(rs.next()){
                jComboBox_Ankieta.addItem(rs.getString(1));
            }
        }catch(Exception e) {
            JOptionPane.showMessageDialog(null, "Error connecting to a database. " + e);
        }
    }
    /**
     * Funkcja zwracajaca numer ankiety ktory zostal wybrany
     * @return 
     */    
    public Integer pollChoice()
    {
        Integer nrAnkiety;
        nrAnkiety=jComboBox_Ankieta.getSelectedIndex();
       //System.out.println(nrAnkiety);
        return nrAnkiety;
    }
     /**
     * Funkcja wypełniająca tabele pytaniami z poszczegolnych ankiet
     * @param nrAnkiety
     */  
    public void fillQuestionTable(Integer nrAnkiety)
    {
         jTextField_NrAnkiety.setText(Integer.toString(nrAnkiety));
        if (nrAnkiety.equals(0)){
            jLabel_WybierzAnkiete.setText("Wybierz ankiete");
        }
        else{
            jLabel_WybierzAnkiete.setText("");
            //zapytanie zwracajace ile jest pytan w danej ankiecie
            sql = "SELECT count(distinct NrPytania) as liczba from zbiory_odpowiedzi where NrAnkiety="+nrAnkiety;
            try {

                for(int i=1;i<ankieta.maxNumberOfQuestions()+1; i++){
                    for(int l=0;l<6;l++){
                        jTable_Pytania.setValueAt("",i-1,l);                   
                    }
                }
                for(int i=1;i<ankieta.numberOfQuestions(nrAnkiety)+1;i++)
                {
                    //zapytanie zwracajace tresc kolejnych pytan dla danej ankiety
                    sql="SELECT Pytanie from pytania where NrPytania="+i+" and NrAnkiety="+nrAnkiety;
                    pst = conn.prepareStatement(sql);
                    rs = pst.executeQuery();

                    while(rs.next()){
                        String pytanie=rs.getString(1);
                        //umieszczenie nr-u pytania i treści poszczegolnych pytan w pierwszych dwoch kolumnach tabeli
                        jTable_Pytania.setValueAt(i,i-1,0);
                        jTable_Pytania.setValueAt(pytanie,i-1,1);
                    }    
                    //zapytanie zwracajace ilosc odpowiedzi dla danego pytania
                    sql="SELECT count(NrOdpowiedzi) from zbiory_odpowiedzi where NrPytania="+i+" and NrAnkiety="+nrAnkiety;
                    pst = conn.prepareStatement(sql);
                    rs = pst.executeQuery();
                    rs.next();
                    int liczbaOdpowiedzi=rs.getInt(1);
                    //System.out.println(liczbaOdpowiedzi);
                    //umieszczenie poszczegolnych odpowiedzi w kolejnych kolumnach tabeli
                    for(int k=1, l=2; k<liczbaOdpowiedzi+1; k++,l++)
                    {
                    sql="SELECT Odpowiedz from zbiory_odpowiedzi where NrOdpowiedzi="+k+" and NrPytania="+i+" and NrAnkiety="+nrAnkiety;
                    pst = conn.prepareStatement(sql);
                    rs = pst.executeQuery();  
                        while(rs.next()){
                           String odpowiedz=rs.getString(1);
                           System.out.println(odpowiedz);
                           jTable_Pytania.setValueAt(odpowiedz,i-1,l);
                       }                              
                    }
                       jComboBox_Pytania.addItem(i);
                }
                //System.out.println(liczbaPytan);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error connecting to a database. " + ex);
            }
        }
    }

    public int numberOfAnswers(int nrAnkiety){
        try{
            sql="SELECT count(NrPytania) from odpowiedzi where NrRespondenta="+nrRespondenta+" and NrAnkiety="+nrAnkiety;
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            rs.next();
            int liczbaOdpowiedzi=rs.getInt(1);   
            return liczbaOdpowiedzi;
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "Error connecting to a datrabase. "+ex);
        }
        return 0;        
    }
     /**
     * Funkcja wypełniająca liste odpowiedziami udzielonymi przez respondenta na pytania z wybranej ankiety
     */
    public void addAnswers(){
        Statement myStmt=null;

        //Wyswietlenie komunikatu o koniecznosci wyboru odpowiedzi        
        if(jTextField_Odp.getText().equals("Odpowiedź"))
        {
            jLabel_Blad.setText("Wprowadź odpowiedź!");
        }
        else{
            jLabel_Blad.setText("");
            //jLabel_Blad.setText("");
            int nrPytania=jComboBox_Pytania.getSelectedIndex()+1;
            int nrOdpowiedzi=Integer.parseInt(jTextField_Odp.getText());
            int nrRespondenta=Integer.parseInt(jTextField_NrRespondenta.getText());
            int nrAnkiety=Integer.parseInt(jTextField_NrAnkiety.getText());
            //System.out.println(nrPytania, nrOdpowiedzi, nrRespondenta, nrAnkiety);
            try {
                //sprawdzenie, czy dana ankieta nie byla juz wypelniona dla danego nrRespondenta
                
                sql="SELECT NrPytania from odpowiedzi where NrRespondenta="+nrRespondenta+" and NrAnkiety="+nrAnkiety;
                pst = conn.prepareStatement(sql);
                rs = pst.executeQuery();    
                
                if(numberOfAnswers(nrAnkiety)==ankieta.numberOfQuestions(nrAnkiety))
                {
                    jLabel_Blad.setText("Ankieta wypełniona!");   
                }
                else{
                    while(rs.next()){
                    if(rs.getInt(1)==nrPytania){
                        jLabel_Blad.setText("Odpowiedziano już na to pytanie!"); 
                        return;                       
                    }
                }    
                    //wprowadzenie udzielonej odpowiedzi do bazy danych
                    sql = "INSERT INTO `odpowiedzi`(`NrAnkiety`, `NrOdpowiedzi`, `NrRespondenta`, `NrPytania`) VALUES ("+nrAnkiety+","+nrOdpowiedzi+","+nrRespondenta+","+nrPytania+")";
                    myStmt= conn.createStatement();
                    myStmt.executeUpdate(sql);

                    jLabel_Blad.setText("Dodano odpowiedź na pytanie "+nrPytania);                    
                }        
            } 
            catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error connecting to a database. " + ex);
            }            
        }  
    }

    public void fillList()
    {
        try {
            int nrAnkiety=Integer.parseInt(jTextField_NrAnkiety.getText());

            //wyswietlenie komunikatu o niepelnym wypelnieniu ankiety
            if(numberOfAnswers(nrAnkiety)<ankieta.numberOfQuestions(nrAnkiety))
            {
                lista.addElement("Nie wszystkie pytania zostały odpowiedziane");
            }
            
            else{
                lista.addElement("Ankieta "+nrAnkiety+": Odpowiedzi respondenta nr "+nrRespondenta);

                for(int i=1;i<ankieta.numberOfQuestions(nrAnkiety)+1;i++)
                {
                    //zapytanie zwracajace odpowiedzi poszczegolnych respondentow na kolejne pytania
                    String sqlCommand2="SELECT NrOdpowiedzi from odpowiedzi where NrPytania="+i+" and NrRespondenta="+nrRespondenta+" and NrAnkiety="+nrAnkiety;
                    pst = conn.prepareStatement(sqlCommand2);
                    rs = pst.executeQuery();
                    rs.next();
                    int odpowiedz=rs.getInt(1);
                    //wyswietlenie odpowiedzi respondenta w liscie
                    lista.addElement("Pytanie "+i+" Odpowiedz: "+odpowiedz);               
                }                
            }
            jList_Odpowiedzi.setModel(lista);
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error connecting to a database. "+ex);
        }
    }
  
}
